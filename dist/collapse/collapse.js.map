{"version":3,"sources":["../../src/collapse/collapse.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,KAAA,EAAM,MAAM,eAAA,CAAgB;AAE/C;;GAEG;AAEH;IAAA;QACE;;WAEG;QACF,cAAS,GAAG,KAAK,CAAC;IAcrB,CAAC;IAAD,kBAAC;AAAD,CAlBA,AAkBC;;AAbM,sBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE,aAAa;gBACvB,IAAI,EAAE,EAAC,kBAAkB,EAAE,MAAM,EAAE,cAAc,EAAE,YAAY,EAAC;aACjE,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,0BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AACK,0BAAc,GAA2C;IAChE,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,aAAa,EAAG,EAAE,EAAE;CACvD,CAAC","file":"collapse.js","sourceRoot":"","sourcesContent":["import {Directive, Input} from '@angular/core';\r\n\r\n/**\r\n * The NgbCollapse directive provides a simple way to hide and show an element with animations.\r\n */\r\n\r\nexport class NgbCollapse {\r\n  /**\r\n   * A flag indicating collapsed (true) or open (false) state.\r\n   */\r\n   collapsed = false;\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: '[ngbCollapse]',\r\n  exportAs: 'ngbCollapse',\r\n  host: {'[class.collapse]': 'true', '[class.show]': '!collapsed'}\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'collapsed': [{ type: Input, args: ['ngbCollapse', ] },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}