{"version":3,"sources":["../../src/dropdown/dropdown.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,UAAU,EACV,MAAM,EACN,SAAS,EACT,KAAK,EACL,MAAM,EACN,YAAY,EACZ,UAAU,EACV,YAAY,EACZ,MAAM,EACN,SAAS,EAEV,MAAM,eAAA,CAAgB;AACvB,OAAO,EAAA,iBAAE,EAAiB,MAAM,mBAAA,CAAoB;AACpD,OAAO,EAAA,gBAAE,EAA2C,MAAM,qBAAA,CAAsB;AAEhF;GACG;AAEH;IAIE,yBACY,QAAQ,EAAU,WAAuB,EACzC,SAAoB;QADpB,aAAQ,GAAR,QAAQ,CAAA;QAAU,gBAAW,GAAX,WAAW,CAAY;QACzC,cAAS,GAAT,SAAS,CAAW;QALhC,cAAS,GAAc,QAAQ,CAAC;QAChC,WAAM,GAAG,KAAK,CAAC;IAIoB,CAAC;IAEpC,qCAAW,GAAX,UAAY,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAEtF,kCAAQ,GAAR,UAAS,SAAS,EAAE,SAAS;QAC3B,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC,CAAC;IAC9F,CAAC;IAED,wCAAc,GAAd,UAAe,UAAqB;QAClC,uCAAuC;QACvC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;QACnF,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;QAC5B;;;;WAIG;QACH,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;QAClF,CAAC;IACH,CAAC;IAUH,sBAAC;AAAD,CApCA,AAoCC;;AATM,0BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,mBAAmB,EAAE,IAAI,EAAE,EAAC,uBAAuB,EAAE,MAAM,EAAE,cAAc,EAAE,mBAAmB,EAAC,EAAC,EAAG,EAAE;CAC3I,CAAC;AACF,kBAAkB;AACX,8BAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,UAAU,CAAC,cAAM,OAAA,WAAW,EAAX,CAAW,CAAC,EAAG,EAAE,EAAG,EAAC;IAC5F,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,SAAS,GAAG;CAClB,EAJ6F,CAI7F,CAAC;AAGF;;GAEG;AAEH;IAGE,2BAAoB,QAAQ,EAAU,WAAuB;QAAzC,aAAQ,GAAR,QAAQ,CAAA;QAAU,gBAAW,GAAX,WAAW,CAAY;QAC3D,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,aAAa,CAAC;IAC5C,CAAC;IAED,sCAAU,GAAV,cAAe,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAExC,uCAAW,GAAX,UAAY,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAiBxF,wBAAC;AAAD,CA1BA,AA0BC;;AAhBM,4BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,qBAAqB;gBAC/B,IAAI,EAAE;oBACJ,OAAO,EAAE,iBAAiB;oBAC1B,eAAe,EAAE,MAAM;oBACvB,sBAAsB,EAAE,mBAAmB;oBAC3C,SAAS,EAAE,cAAc;iBAC1B;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,gCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,UAAU,CAAC,cAAM,OAAA,WAAW,EAAX,CAAW,CAAC,EAAG,EAAE,EAAG,EAAC;IAC5F,EAAC,IAAI,EAAE,UAAU,GAAG;CACnB,EAH6F,CAG7F,CAAC;AAGF;;GAEG;AAEH;IAmCE,qBAAY,MAAyB,EAAE,MAAc;QAArD,iBAIC;QAvBD;;WAEG;QACF,UAAK,GAAG,KAAK,CAAC;QAUf;;;WAGG;QACF,eAAU,GAAG,IAAI,YAAY,EAAE,CAAC;QAG/B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAQ,KAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACtF,CAAC;IAED,8BAAQ,GAAR;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAsB,CAAC,CAAC;QAC/G,CAAC;IACH,CAAC;IAED;;OAEG;IACH,4BAAM,GAAN,cAAoB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAExC;;OAEG;IACH,0BAAI,GAAJ;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC;IACH,CAAC;IAED;;OAEG;IACH,2BAAK,GAAL;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC;IACH,CAAC;IAED;;OAEG;IACH,4BAAM,GAAN;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,IAAI,EAAE,CAAC;QACd,CAAC;IACH,CAAC;IAED,oCAAc,GAAd,UAAe,MAAM;QACnB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC9E,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,KAAK,QAAQ,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACxE,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,KAAK,SAAS,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC1E,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,CAAC;QACH,CAAC;IACH,CAAC;IAED,yCAAmB,GAAnB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC;IACH,CAAC;IAED,iCAAW,GAAX,cAAgB,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IAE/C,wCAAkB,GAA1B,UAA2B,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAE9F,sCAAgB,GAAxB,UAAyB,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAExF,mCAAa,GAArB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAChD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7D,CAAC;IACH,CAAC;IAyBH,kBAAC;AAAD,CAzIA,AAyIC;;AAxBM,sBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE,aAAa;gBACvB,IAAI,EAAE;oBACJ,cAAc,EAAE,UAAU;oBAC1B,aAAa,EAAE,uBAAuB;oBACtC,kBAAkB,EAAE,wBAAwB;iBAC7C;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,0BAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,iBAAiB,GAAG;IAC3B,EAAC,IAAI,EAAE,MAAM,GAAG;CACf,EAH6F,CAG7F,CAAC;AACK,0BAAc,GAA2C;IAChE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,eAAe,EAAG,EAAE,EAAE;IAC7D,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,iBAAiB,EAAG,EAAE,EAAE;IACjE,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC/B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,MAAM,EAAG,EAAE,EAAE;IAC7C,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC/B,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CAChC,CAAC","file":"dropdown.js","sourceRoot":"","sourcesContent":["import {\r\n  forwardRef,\r\n  Inject,\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n  ContentChild,\r\n  NgZone,\r\n  Renderer2,\r\n  OnInit\r\n} from '@angular/core';\r\nimport {NgbDropdownConfig} from './dropdown-config';\r\nimport {positionElements, PlacementArray, Placement} from '../util/positioning';\r\n\r\n/**\r\n */\r\n\r\nexport class NgbDropdownMenu {\r\n  placement: Placement = 'bottom';\r\n  isOpen = false;\r\n\r\n  constructor(\r\n       public dropdown, private _elementRef: ElementRef,\r\n      private _renderer: Renderer2) {}\r\n\r\n  isEventFrom($event) { return this._elementRef.nativeElement.contains($event.target); }\r\n\r\n  position(triggerEl, placement) {\r\n    this.applyPlacement(positionElements(triggerEl, this._elementRef.nativeElement, placement));\r\n  }\r\n\r\n  applyPlacement(_placement: Placement) {\r\n    // remove the current placement classes\r\n    this._renderer.removeClass(this._elementRef.nativeElement.parentElement, 'dropup');\r\n    this.placement = _placement;\r\n    /**\r\n     * apply the new placement\r\n     * change the class only in case of top to show up arrow\r\n     * or use defualt which is dropdown to show down arrow\r\n     */\r\n    if (_placement.search('^top') !== -1) {\r\n      this._renderer.addClass(this._elementRef.nativeElement.parentElement, 'dropup');\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngbDropdownMenu]', host: {'[class.dropdown-menu]': 'true', '[class.show]': 'dropdown.isOpen()'}}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [forwardRef(() => NgbDropdown), ] }, ]},\n{type: ElementRef, },\n{type: Renderer2, },\n];\n}\r\n\r\n/**\r\n * Allows the dropdown to be toggled via click. This directive is optional.\r\n */\r\n\r\nexport class NgbDropdownToggle {\r\n  anchorEl;\r\n\r\n  constructor( public dropdown, private _elementRef: ElementRef) {\r\n    this.anchorEl = _elementRef.nativeElement;\r\n  }\r\n\r\n  toggleOpen() { this.dropdown.toggle(); }\r\n\r\n  isEventFrom($event) { return this._elementRef.nativeElement.contains($event.target); }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: '[ngbDropdownToggle]',\r\n  host: {\r\n    'class': 'dropdown-toggle',\r\n    'aria-haspopup': 'true',\r\n    '[attr.aria-expanded]': 'dropdown.isOpen()',\r\n    '(click)': 'toggleOpen()'\r\n  }\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [forwardRef(() => NgbDropdown), ] }, ]},\n{type: ElementRef, },\n];\n}\r\n\r\n/**\r\n * Transforms a node into a dropdown.\r\n */\r\n\r\nexport class NgbDropdown implements OnInit {\r\n  private _zoneSubscription: any;\r\n\r\n   private _menu: NgbDropdownMenu;\r\n\r\n   private _toggle: NgbDropdownToggle;\r\n\r\n  /**\r\n   * Indicates that dropdown should be closed when selecting one of dropdown items (click) or pressing ESC.\r\n   * When it is true (default) dropdowns are automatically closed on both outside and inside (menu) clicks.\r\n   * When it is false dropdowns are never automatically closed.\r\n   * When it is 'outside' dropdowns are automatically closed on outside clicks but not on menu clicks.\r\n   * When it is 'inside' dropdowns are automatically on menu clicks but not on outside clicks.\r\n   */\r\n   autoClose: boolean | 'outside' | 'inside';\r\n\r\n  /**\r\n   *  Defines whether or not the dropdown-menu is open initially.\r\n   */\r\n   _open = false;\r\n\r\n  /**\r\n   * Placement of a popover accepts:\r\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\r\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\r\n   * and array of above values.\r\n   */\r\n   placement: PlacementArray;\r\n\r\n  /**\r\n   *  An event fired when the dropdown is opened or closed.\r\n   *  Event's payload equals whether dropdown is open.\r\n   */\r\n   openChange = new EventEmitter();\r\n\r\n  constructor(config: NgbDropdownConfig, ngZone: NgZone) {\r\n    this.placement = config.placement;\r\n    this.autoClose = config.autoClose;\r\n    this._zoneSubscription = ngZone.onStable.subscribe(() => { this._positionMenu(); });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this._menu) {\r\n      this._menu.applyPlacement(Array.isArray(this.placement) ? (this.placement[0]) : this.placement as Placement);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks if the dropdown menu is open or not.\r\n   */\r\n  isOpen(): boolean { return this._open; }\r\n\r\n  /**\r\n   * Opens the dropdown menu of a given navbar or tabbed navigation.\r\n   */\r\n  open(): void {\r\n    if (!this._open) {\r\n      this._open = true;\r\n      this._positionMenu();\r\n      this.openChange.emit(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes the dropdown menu of a given navbar or tabbed navigation.\r\n   */\r\n  close(): void {\r\n    if (this._open) {\r\n      this._open = false;\r\n      this.openChange.emit(false);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the dropdown menu of a given navbar or tabbed navigation.\r\n   */\r\n  toggle(): void {\r\n    if (this.isOpen()) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  closeFromClick($event) {\r\n    if (this.autoClose && $event.button !== 2 && !this._isEventFromToggle($event)) {\r\n      if (this.autoClose === true) {\r\n        this.close();\r\n      } else if (this.autoClose === 'inside' && this._isEventFromMenu($event)) {\r\n        this.close();\r\n      } else if (this.autoClose === 'outside' && !this._isEventFromMenu($event)) {\r\n        this.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  closeFromOutsideEsc() {\r\n    if (this.autoClose) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() { this._zoneSubscription.unsubscribe(); }\r\n\r\n  private _isEventFromToggle($event) { return this._toggle ? this._toggle.isEventFrom($event) : false; }\r\n\r\n  private _isEventFromMenu($event) { return this._menu ? this._menu.isEventFrom($event) : false; }\r\n\r\n  private _positionMenu() {\r\n    if (this.isOpen() && this._menu && this._toggle) {\r\n      this._menu.position(this._toggle.anchorEl, this.placement);\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: '[ngbDropdown]',\r\n  exportAs: 'ngbDropdown',\r\n  host: {\r\n    '[class.show]': 'isOpen()',\r\n    '(keyup.esc)': 'closeFromOutsideEsc()',\r\n    '(document:click)': 'closeFromClick($event)'\r\n  }\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbDropdownConfig, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_menu': [{ type: ContentChild, args: [NgbDropdownMenu, ] },],\n'_toggle': [{ type: ContentChild, args: [NgbDropdownToggle, ] },],\n'autoClose': [{ type: Input },],\n'_open': [{ type: Input, args: ['open', ] },],\n'placement': [{ type: Input },],\n'openChange': [{ type: Output },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}