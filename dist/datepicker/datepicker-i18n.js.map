{"version":3,"sources":["../../src/datepicker/datepicker-i18n.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAA,UAAE,EAAU,MAAM,eAAA,CAAgB;AAEzC,IAAM,cAAA,GAAiB,CAAA,IAAE,EAAK,IAAA,EAAM,IAAA,EAAM,IAAA,EAAM,IAAA,EAAM,IAAA,EAAM,IAAA,CAAK,CAAC;AAClE,IAAM,YAAA,GAAe,CAAA,KAAE,EAAM,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,EAAO,KAAA,CAAM,CAAC;AAC1G,IAAM,WAAA,GAAc;IAClB,SAAS,EAAE,UAAA,EAAY,OAAA,EAAS,OAAA,EAAS,KAAA,EAAO,MAAA,EAAQ,MAAA,EAAQ,QAAA,EAAU,WAAA,EAAa,SAAA,EAAW,UAAA;IAClG,UAAU;CACX,CAAC;AAEF;;;GAGG;AAEH;IAAA;IAwBA,CAAC;IAAD,wBAAC;AAAD,CAxBA,AAwBC;;AANM,4BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,gCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAIF;IAA8C,4CAAiB;IAA/D;;IAYA,CAAC;IAXC,sDAAmB,GAAnB,UAAoB,OAAe,IAAY,MAAM,CAAC,cAAc,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAEpF,oDAAiB,GAAjB,UAAkB,KAAa,IAAY,MAAM,CAAC,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAE5E,mDAAgB,GAAhB,UAAiB,KAAa,IAAY,MAAM,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAO5E,+BAAC;AAAD,CAZA,AAYC,CAZ6C,iBAAiB;;AAMxD,mCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,uCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"datepicker-i18n.js","sourceRoot":"","sourcesContent":["import {Injectable} from '@angular/core';\r\n\r\nconst WEEKDAYS_SHORT = ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'];\r\nconst MONTHS_SHORT = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\nconst MONTHS_FULL = [\r\n  'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November',\r\n  'December'\r\n];\r\n\r\n/**\r\n * Type of the service supplying month and weekday names to to NgbDatepicker component.\r\n * See the i18n demo for how to extend this class and define a custom provider for i18n.\r\n */\r\n\r\nexport abstract class NgbDatepickerI18n {\r\n  /**\r\n   * Returns the short weekday name to display in the heading of the month view.\r\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\r\n   */\r\n  abstract getWeekdayShortName(weekday: number): string;\r\n\r\n  /**\r\n   * Returns the short month name to display in the date picker navigation.\r\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec\r\n   */\r\n  abstract getMonthShortName(month: number): string;\r\n\r\n  /**\r\n   * Returns the full month name to display in the date picker navigation.\r\n   * With default calendar we use ISO 8601: 'month' is 1=January ... 12=December\r\n   */\r\n  abstract getMonthFullName(month: number): string;\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\r\n\r\nexport class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\r\n  getWeekdayShortName(weekday: number): string { return WEEKDAYS_SHORT[weekday - 1]; }\r\n\r\n  getMonthShortName(month: number): string { return MONTHS_SHORT[month - 1]; }\r\n\r\n  getMonthFullName(month: number): string { return MONTHS_FULL[month - 1]; }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}